stages:
  - build_docs
  - build
  - test
  - deploy

build:
  stage: build
  variables:
      # GO_PROJECT_PATH: git.zam.io/wallet-backend/web-api
      GO_PROJECT_PATH: gitlab.com/ZamzamTech/wallet-api
      GOROOT: /usr/lib/go-1.10/
  script:
    # prepare go-env
    - mkdir build
    - export BUILD_OUT_DIR=`pwd`/build

    - mkdir -p bin
    - export GOPATH=`pwd`
    - export PATH=$PATH:/usr/lib/go-1.10/bin:$GOPATH/bin
  
    # copy all files into go-style path
    - mkdir -p .src/$GO_PROJECT_PATH
    - cp -r * .src/$GO_PROJECT_PATH
    - mv .src src

    - cd src/$GO_PROJECT_PATH

    # install dep tool and ensure dependencies
    - INSTALL_DIRECTORY=`pwd` curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    - dep ensure

    # install ginkgo and build tests
    - go get github.com/onsi/ginkgo
    - go build -o ginkgo github.com/onsi/ginkgo/ginkgo
    - ./ginkgo build -r .
    - mkdir $BUILD_OUT_DIR/tests
    - cp `find -name *.test` $BUILD_OUT_DIR/tests

    # build binary into artifact
    - go build -o $BUILD_OUT_DIR/web-api cmd/main/main.go

    # copy migrations
    - mkdir $BUILD_OUT_DIR/migrations
    - cp db/migrations/* $BUILD_OUT_DIR/migrations

    # copy config generator
    - cp config_generator.sh $BUILD_OUT_DIR
  tags:
    - build_srv
  artifacts:
    paths:
      - build

pages_build:
  stage: build_docs
  script:
    - mkdir -p docs
    - export OUT_FILE_NAME=${CI_COMMIT_REF_NAME}.html
    - npm install redoc-cli
    - ./node_modules/redoc-cli/index.js bundle -o $OUT_FILE_NAME docs/swagger/api.yaml
    - cp $OUT_FILE_NAME docs/
  tags:
   - build_srv
  artifacts:
    paths:
      - docs
  cache:
    key: node_modules
    paths:
    - node_modules/
  only:
    - master
    - development

pages:
  stage: build
  script:
    - mkdir -p public
    - mkdir -p pages
    - export OUT_FILE_NAME=${CI_COMMIT_REF_NAME}.html
    - cp docs/$OUT_FILE_NAME pages
    - cp pages/* public
  tags:
   - build_srv
  cache:
    key: pages_cache
    paths:
    - pages/
  artifacts:
    paths:
      - docs
      - public
  only:
    - master
    - development
  dependencies:
    - pages_build

test:
  stage: test
  script:
    # export variables used by test to lookup migrations and db
    - export WA_DB_URI=$TESTING_DB_URI
    - export WA_MIGRATIONS_DIR=build/migrations

    # run them sequentially break if any of them failed
    - bash -c 'for TEST in $(find -name *.test); do ./$TEST; if [ $? -ne 0 ]; then break; fi; done'
  tags:
    - testing_srv
  dependencies:
    - build

deploy_on_staging:
  stage: deploy
  script:
    # remove outdated binary and copy new one
    - rm -f $STAGING_DEPLOY_DIR/web-api
    - cp build/web-api $STAGING_DEPLOY_DIR
    - cp build/config_generator.sh $STAGING_DEPLOY_DIR
    - cp -r build/migrations $STAGING_DEPLOY_DIR

    # generate config
    - cd $STAGING_DEPLOY_DIR
    - bash config_generator.sh > conf.yaml

    # trigger systemd to restart service by softly killing old instance
    - killall -1 web-api
  only:
    - master
  tags:
    - testing_srv
