// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"

// IEventNotificator is an autogenerated mock type for the IEventNotificator type
type IEventNotificator struct {
	mock.Mock
}

// PasswordRecoveryCompleted provides a mock function with given fields: userID
func (_m *IEventNotificator) PasswordRecoveryCompleted(userID string) error {
	ret := _m.Called(userID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PasswordRecoveryVerificationRequested provides a mock function with given fields: userID, userPhone, verificationCode
func (_m *IEventNotificator) PasswordRecoveryVerificationRequested(userID string, userPhone string, verificationCode string) error {
	ret := _m.Called(userID, userPhone, verificationCode)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(userID, userPhone, verificationCode)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RegistrationCompleted provides a mock function with given fields: userID
func (_m *IEventNotificator) RegistrationCompleted(userID string) error {
	ret := _m.Called(userID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RegistrationVerificationRequested provides a mock function with given fields: userID, userPhone, verificationCode
func (_m *IEventNotificator) RegistrationVerificationRequested(userID string, userPhone string, verificationCode string) error {
	ret := _m.Called(userID, userPhone, verificationCode)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(userID, userPhone, verificationCode)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
