---
swagger: "2.0"
info:
  title: "ZamZam API"
  description: "Test"
  version: "0.0.1"
  
host: "znt03"
basePath: "/api/v1"
schemes:
  - "https"

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Requires "Bearer" prefix

paths:
  /auth/signup/start:
    post:
      summary: Start user account creation by sending verification code via SMS.
      description: This method is idempotent, so sequential call will result in re-dispatching of an SMS with verification code, but there is call limits per phone number.
      parameters:
        - in: body
          name: body
          required: true
          description: User account creation request
          schema:
            type: object
            properties:
              phone:
                type: string
                format: phone_number
                description: User phone
              referrer_phone:
                type: string
                format: phone_number
                description: Phone of an existing user are required, self phone are not allowed.
            required:
              - phone
      responses:
        200:
          description: Ok, SMS with confirmation code has been sent
          schema:
            $ref: "#/definitions/BaseResponse"
        400:
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * User already exists
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "message": "user already exists",
                      "name": "phone",
                      "input": "body"
                    }
                  ]
                }
                ```
              * Referrer not found
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "referrer_phone",
                      "input": "body",
                      "message": "referrer not found"
                    }
                  ]
                }
                ```
              * Not so fast! Next code dispatch will be awaliable in %d seconds...
          schema:
            $ref: "#/definitions/Errors"
        500:
          description: |
            Internal server error
  
  /auth/signup/verify:
    post:
      summary: Verifies user account by passing SMS Code which has been sent previously
      parameters:
        - in: body
          name: body
          required: true
          description: User account verification request
          schema:
            type: object
            properties:
              phone:
                type: string
                format: phone_number
                description: User phone
              verification_code:
                type: string
                description: Verification code obtained by SMS
            required:
              - phone
              - verification_code
      responses:
        200:
          description: Ok, returned SignUp Token must be used for further account creation
          schema:
            allOf:
              - $ref: "#/definitions/BaseResponse"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      signup_token:
                        type: string
                        description: SignUp token required by further "finish" request
        400:
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * Code is wrong
                - Description: returned when either phone or code are invalid
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "code",
                      "input": "body",
                      "message": "code is wrong"
                    }
                  ]
                }
                ```
          schema:
            $ref: "#/definitions/Errors"
        500:
          description: |
            Internal server error
          schema:
            $ref: "#/definitions/Errors"
  
  /auth/signup/finish:
    put:
      summary: Finish account creation by setting user password, this request requires SignUp Token
      parameters:
        - in: body
          name: body
          required: true
          description: User account craetion request
          schema:
            type: object
            properties:
              phone:
                type: string
                format: phone_number
                description: User phone
              signup_token:
                type: string
                description: SignUp Token received in "verify" request
              password:
                type: string
                format: password
              password_confirmation:
                type: string
                format: password
            required:
              - phone
              - signup_token
              - password
              - password_confirmation
      responses:
        200:
          description: Ok, refistration completed, user allowed to signin, also returns auth token
          schema:
            $ref: "#/definitions/UserTokenResponse"
        400:
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * SignUp Token is wrong
                - Hint: in case of lost SignUp Token, issue start again
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "signup_token",
                      "input": "body",
                      "message": "signup token is wrong"
                    }
                  ]
                }
                ```
              * User already exists
                - Hint: means that all stages already passed so user can login using previously specified auth perameters
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "phone",
                      "input": "body",
                      "message": "user already exists"
                    }
                  ]
                }
                ```
        500:
          description: |
            Internal server error
          schema:
            $ref: "#/definitions/Errors"
  
  /auth/recovery/start:
    post:
      summary: Start user password recovery by sending verification code via SMS.
      description: This method is idempotent, so sequential call will result in re-dispatching of an SMS with verification code, but there is call limits per phone number.
      parameters:
        - in: body
          name: body
          required: true
          description: User recovery request
          schema:
            type: object
            properties:
              phone:
                type: string
                format: phone_number
                description: User phone
            required:
              - phone
      responses:
        200:
          description: Ok, SMS with confirmation code has been sent
          schema:
            $ref: "#/definitions/BaseResponse"
        400:
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * User not found
                - Description: no user found with given phone
              * Not so fast! Next code dispatch will be awaliable in %d seconds...
          schema:
            $ref: "#/definitions/Errors"
        500:
          description: |
            Internal server error
  
  /auth/recovery/verify:
    post:
      summary: Verifies user password recovery by passing SMS Code which has been sent previously
      parameters:
        - in: body
          name: body
          required: true
          description: User password recovery verification request
          schema:
            type: object
            properties:
              phone:
                type: string
                format: phone_number
                description: User phone
              verification_code:
                type: string
                description: Verification code obtained by SMS
            required:
              - phone
              - verification_code
      responses:
        200:
          description: Ok, returned Token must be used for further password recovery
          schema:
            allOf:
              - $ref: "#/definitions/BaseResponse"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      recovery_token:
                        type: string
                        description: Recovery Token required by further "finish" request
                    required:
                      - token
        400:
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * Code is wrong
                - Description: returned when either phone or code are invalid
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "code",
                      "input": "body",
                      "message": "code is wrong"
                    }
                  ]
                }
                ```
          schema:
            $ref: "#/definitions/Errors"
        500:
          description: |
            Internal server error
          schema:
            $ref: "#/definitions/Errors"
  
  /auth/recovery/finish:
    put:
      summary: Finish password recovery by setting user password, this request requires Recovery Token
      parameters:
        - in: body
          name: body
          required: true
          description: User password recovery finish request
          schema:
            type: object
            properties:
              phone:
                type: string
                format: phone_number
                description: User phone
              recovery_token:
                type: string
                description: Recovery Token received in "verify" request
              password:
                type: string
                format: password
              password_confirmation:
                type: string
                format: password
            required:
              - phone
              - recovery_token
              - password
              - password_confirmation
      responses:
        200:
          description: Ok, refistration completed, user allowed to signin, also returns auth token
          schema:
            $ref: "#/definitions/UserTokenResponse"
        400:
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * Recovery Token is wrong
                - Hint: in case of lost Recovery Token, issue start again
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "token",
                      "input": "body",
                      "message": "recovery_token is wrong"
                    }
                  ]
                }
                ```
        500:
          description: |
            Internal server error
          schema:
            $ref: "#/definitions/Errors"

  /auth/signin:
    post:
      summary: Authorize user and get auth token, works only for full-verified user accounts
      parameters:
        - in: body
          name: body
          required: true
          description: Create user request
          schema:
            $ref: "#/definitions/UserSigninRequest"
      responses:
        200:
          description: Authorized successfully
          schema:
            $ref: '#/definitions/UserTokenResponse'
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"
  /auth/signout:
    delete:
      security:
        - Bearer: []
      summary: Invalidates user's current authorization session
      responses:
        200:
          description: Ok, token session invalidated
          schema:
            $ref: "#/definitions/BaseResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"

  /auth/refresh_token:
    get:
      security:
      - Bearer: []
      summary: Refresh user token
      responses:
        200:
          description: Ok, token has been successfuly refreshed
          schema:
            $ref: "#/definitions/UserTokenResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"

  /auth/check:
    get:
      security:
        - Bearer: []
      summary: Checks if user authorized, returns his phone on success
      responses:
        200:
          description: Ok, user authorized
          schema:
            $ref: "#/definitions/UserPhoneResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"

  /user/me:
    get:
      security:
        - Bearer: []
      summary: Get specified user info
      responses:
        200:
          description: User info
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"
        
  /user/me/verify:
    post:
      security:
        - Bearer: []
      summary: Create user KYC request
      parameters:
        - in: body
          name: body
          required: true
          description: Create KYC form
          schema:
            $ref: "#/definitions/UserCreateKYCRequest"
      responses:
        201:
          description: KYC request created
          schema:
            $ref: "#/definitions/UserKYCResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"
    get:
      security:
        - Bearer: []
      summary: Get user KYC request info
      responses:
        200:
          description: User KYC request info
          schema:
            $ref: "#/definitions/UserKYCResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"

  /user/me/refferals:
    get:
      security:
        - Bearer: []
      summary: Get list of user refferals
      responses:
        200:
          description: List of refferals
          schema:
            properties:
              refferals:    
                type: array
                items:
                  type: string
                  format: uuid
                  description: Refferal user ID
  
  /user/me/wallets:
    post:
      security:
        - Bearer: []
      summary: Create new user wallet for given coin
      parameters:
        - in: body
          name: body
          required: true
          description: Create wallet request
          schema:
            $ref: "#/definitions/UserCreateWalletRequest"
      responses:
        201:
          description: New wallet has been successfully created
          schema:
            $ref: "#/definitions/UserWalletResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"
    get:
      security:
        - Bearer: []
      summary: Get all user wallets
      parameters:
        - in: query
          name: coin
          required: false
          type: string
          description: "Filter by: coin name"
        - in: query
          name: wallet_id
          required: false
          type: string
          description: Wallet ID
        - in: query
          name: page
          type: string
          required: false
          description: Reference to the page
        - in: query
          name: count
          type: integer
          required: false
          description: Number of items to show on the page
      responses:
        200:
          description: All user wallets in a list
          schema:
            $ref: "#/definitions/UserAllWalletsResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"
  
  /user/me/wallets/{wallet_id}:
    parameters:
      - in: path
        name: wallet_id
        required: true
        type: string
        description: Wallet ID
    get:
      security:
        - Bearer: []
      summary: Request user wallet info by wallet id
      responses:
        200:
          description: Wallets list
          schema:
            $ref: "#/definitions/UserWalletResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"

  /user/me/txs:
    get:
      security:
        - Bearer: []
      summary: Get all transactions or use filters
      parameters:
        - in: query
          name: coin
          required: false
          type: string
          description: "Filter by: coin name"
        - in: query
          name: wallet_id
          required: false
          type: string
          description: "Filter by: wallet ID"
        - in: query
          name: recipient
          required: false
          type: string
          description: "Filter by: Recipient address"
        - in: query
          name: from_time
          type: string
          format: date-time
        - in: query
          name: until_time
          type: string
          format: date-time
        - in: query
          name: page
          type: string
          required: false
          description: Reference to the page
        - in: query
          name: count
          type: integer
          required: false
          description: Number of items to show on the page
      responses:
        200:
          description: Transactions list
          schema:
            $ref: "#/definitions/WalletAllTransactionsResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"
    post:
      security:
        - Bearer: []
      summary: Send transaction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/WalletSendTransactionRequest"
      responses:
        201:
          description: Pending transaction created
          schema:
            $ref: "#/definitions/WalletSendTransactionResponse"
  
  /user/me/txs/{tx_id}:
    parameters:
      - in: path
        name: tx_id
        required: true
        type: string
        description: Transaction ID
    get:
      security:
        - Bearer: []
      summary: Get transaction for specified ID
      responses:
        200:
          description: Transaction
          schema:
            $ref: "#/definitions/WalletTransactionResponse"
        default:
          description: In case of any error
          schema:
            $ref: "#/definitions/Errors"

definitions:
  UserSingupRequest:
    properties:
      phone:
        type: string
        description: Valid phone number of the user
      password:
        type: string
        format: password
      password_confirmation:
        type: string
        format: password
      refferer_phone:
        type: string
        description: Valid phone of person which sent invite which leads to this call
    required:
      - phone
      - password
      - password_confirmation
  
  BaseResponse:
    properties:
      result:
        type: boolean

  UserTokenResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          data:
            type: object
            properties:    
              token:
                type: string
                description: User authorization token
                example: "asdfjbkasfkjasdfl"
    required:
      - token
      - data
  
  UserPhoneResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          data:
            type: object
            properties:
              phone:
                type: string
                description: User phone number
    required:
      - phone

  UserSigninRequest:
    properties:
      phone:
        type: string
        description: Valid phone number of already created user
      password:
        type: string
        format: password
        description: User passowrd
    required:
      - phone
      - password

  User:
    properties:
      id:
        type: string
        description: Unique user identifier
      phone:
        type: string
        description: User phone in international form
      refferer_id:
        type: string
        description: Identifier or user refferer
      registered:
        type: string
        description: Date when user registration occurs
        format: date-time
        example: 2017-07-21T17:32:28Z
  
  UserResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          user:
            $ref: "#/definitions/User"

  UserKYCData:
    properties:
      user_id:
        type: string
        description: User reference
      name:
        type: string
        description: User name
      surname:
        type: string
        description: User surname
      birthdate:
        type: string
        description: Date of the user birthdate
        format: date
        example: 1900-07-21T17:32:28Z
      country:
        type: string
        description: Main user citizenship
        example: Ethiopia
      address:
        type: string
        description: User living address
      email:
        type: string
        format: email
      status:
        $ref: "#/definitions/UserKYCStatus"
    required:
      - user_id
      - name
      - surname
      - birthdate
      - country
      - address
      - email
      - status
  
  UserCreateKYCRequest:
    $ref: "#/definitions/UserKYCData"

  UserKYCResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          kyc:
            $ref: "#/definitions/UserKYCData"
      
  UserKYCStatus:
    type: string
    enum:
      - pending
      - rejected
      - verified
  
  CoinType:
    type: string
    description: Specifies coin type
    enum:
      - eth
      - btc
      - btcc
      - zam

  UserCreateWalletRequest:
    properties:
      coin:
        $ref: "#/definitions/CoinType"
      wallet_name:
        type: string
        description: Optional name for user wallet
    required:
      - coin
  
  UserWalletData:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Unique wallet id
      coin:
        $ref: "#/definitions/CoinType"
      wallet_name:
        type: string
        description: Optional name for user wallet
      address:
        type: string
        description: Real address inside coin blockchain
      balance:
        type: number
        description: Wallet balance
    required:
      - id
      - coin
      - wallet_name
      - address
      - balance

  UserWalletResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          wallet:
            $ref: "#/definitions/UserWalletData"
      
  UserAllWalletsResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          сount:
            type: integer
            description: Count of returned transactions
          next:
            type: string
            description: Reference to the next page
          wallets:
            items:
              $ref: "#/definitions/UserWalletData"

  WalletTransactionStatus:
    description: Describes transaction status
    type: string
    enum:
      - pending
      - awaiting_recipient
      - awaiting_confirmations
      - done
      - cancelled
      - failed

  WalletTransactionData:
    properties:
      id:
        type: string
        description: Unique identifier of the transaction
      direction:
        type: string
        enum:
          - incoming
          - outgoing
      status:
        $ref: "#/definitions/WalletTransactionStatus"
      coin:
        $ref: "#/definitions/CoinType"
      recipient:
        type: string
        description: |
          'Recipinet of this transaction, on of "me", "coin_address", "user_id"'
      amount:
        type: number
        description: Amount of transferred coins
    required:
      - id
      - direction
      - recipient
      - amount
  
  WalletSendTransactionRequest:
    properties:
      wallet_id:
        type: string
        description: Wallet for featured transaction
      recipient:
        type: string
        description: |
          'Recipinet of this transaction, on of "me", "coin_address", "user_id"'
      amount:
        type: number
        description: Amount of transferred coins
  
  WalletSendTransactionResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          transaction:
            $ref: "#/definitions/WalletTransactionData"
      
  WalletTransactionResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          transaction:
            $ref: "#/definitions/WalletTransactionData"

  WalletAllTransactionsResponse:
    allOf:
      - $ref: "#/definitions/BaseResponse"
      - type: object
        properties:
          сount:
            type: integer
            description: Count of returned transactions
          next:
            type: string
            description: Reference to the next page
          transactions:
            items:
              $ref: "#/definitions/WalletTransactionData"
  Errors:
    allOf:
    - $ref: "./index.yaml#/definitions/BaseResponse"
    - type: object
      properties:
        errors:
          type: array
          items:
            type: object
            anyOf:
            - $ref: './index.yaml#/definitions/FieldError'
            - $ref: './index.yaml#/definitions/Error'
    
  Error:
    description: Error format which returned by handlers (usually internal errors)
    type: object
    properties:
      message:
        type: string
        description: Describes error

  FieldError:
    type: object
    description: |
      This field is presented in case when error is cause of missed, misstyped or wrong formatted request 
      parameter passed throught POST JSON body, query or path
    properties:
      message:
        type: string
        description: Describes what wrong with this field
      name:
        type: string
        description: Name of parameter which occurs error
      input:
        type: string
        description: Describes the way in which this parameter has come
    required:
      - message
      - name
      - input
