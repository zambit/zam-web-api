openapi: 3.0.0
info:
  title: ZamZam API
  description: Test
  version: 0.0.1
servers:
  - url: 'http://api-test.zam.io/api/v1'
paths:
  /auth/signup/start:
    post:
      summary: Start user account creation by sending verification code via SMS.
      description: >-
        This method is idempotent, so sequential call will result in
        re-dispatching of an SMS with verification code, but there is call
        limits per phone number.
      responses:
        '200':
          description: 'Ok, SMS with confirmation code has been sent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * User already exists
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "message": "user already exists",
                      "name": "phone",
                      "input": "body"
                    }
                  ]
                }
                ```
              * Referrer not found
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "referrer_phone",
                      "input": "body",
                      "message": "referrer not found"
                    }
                  ]
                }
                ```
              * Not so fast! Next code dispatch will be awaliable in %d seconds...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: |
            Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  format: phone_number
                  description: User phone
                referrer_phone:
                  type: string
                  format: phone_number
                  description: >-
                    Phone of an existing user are required, self phone are not
                    allowed.
              required:
                - phone
        description: User account creation request
        required: true
  /auth/signup/verify:
    post:
      summary: Verifies user account by passing SMS Code which has been sent previously
      responses:
        '200':
          description: 'Ok, returned SignUp Token must be used for further account creation'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          signup_token:
                            type: string
                            description: SignUp token required by further "finish" request
        '400':
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * Code is wrong
                - Description: returned when either phone or code are invalid
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "code",
                      "input": "body",
                      "message": "code is wrong"
                    }
                  ]
                }
                ```
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: |
            Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  format: phone_number
                  description: User phone
                verification_code:
                  type: string
                  description: Verification code obtained by SMS
              required:
                - phone
                - verification_code
        description: User account verification request
        required: true
  /auth/signup/finish:
    put:
      summary: >-
        Finish account creation by setting user password, this request requires
        SignUp Token
      responses:
        '200':
          description: >-
            Ok, refistration completed, user allowed to signin, also returns
            auth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenResponse'
        '400':
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * SignUp Token is wrong
                - Hint: in case of lost SignUp Token, issue start again
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "signup_token",
                      "input": "body",
                      "message": "signup token is wrong"
                    }
                  ]
                }
                ```
              * User already exists
                - Hint: means that all stages already passed so user can login using previously specified auth perameters
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "phone",
                      "input": "body",
                      "message": "user already exists"
                    }
                  ]
                }
                ```
        '500':
          description: |
            Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  format: phone_number
                  description: User phone
                signup_token:
                  type: string
                  description: SignUp Token received in "verify" request
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
              required:
                - phone
                - signup_token
                - password
                - password_confirmation
        description: User account craetion request
        required: true
  /auth/recovery/start:
    post:
      summary: Start user password recovery by sending verification code via SMS.
      description: >-
        This method is idempotent, so sequential call will result in
        re-dispatching of an SMS with verification code, but there is call
        limits per phone number.
      responses:
        '200':
          description: 'Ok, SMS with confirmation code has been sent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * User not found
                - Description: no user found with given phone
              * Not so fast! Next code dispatch will be awaliable in %d seconds...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: |
            Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  format: phone_number
                  description: User phone
              required:
                - phone
        description: User recovery request
        required: true
  /auth/recovery/verify:
    post:
      summary: >-
        Verifies user password recovery by passing SMS Code which has been sent
        previously
      responses:
        '200':
          description: 'Ok, returned Token must be used for further password recovery'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          recovery_token:
                            type: string
                            description: >-
                              Recovery Token required by further "finish"
                              request
                        required:
                          - token
        '400':
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * Code is wrong
                - Description: returned when either phone or code are invalid
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "code",
                      "input": "body",
                      "message": "code is wrong"
                    }
                  ]
                }
                ```
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: |
            Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  format: phone_number
                  description: User phone
                verification_code:
                  type: string
                  description: Verification code obtained by SMS
              required:
                - phone
                - verification_code
        description: User password recovery verification request
        required: true
  /auth/recovery/finish:
    put:
      summary: >-
        Finish password recovery by setting user password, this request requires
        Recovery Token
      responses:
        '200':
          description: >-
            Ok, refistration completed, user allowed to signin, also returns
            auth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenResponse'
        '400':
          description: |
            Possible error messages:
              * Wrong parametres
                - Description: parametres validation errors
              * Such action not allowed
                - Description: account already created or on another stage
                - Hint: issue "start" again if you don't know what to do
              * User not found
                - Description: no user found with given phone
              * Recovery Token is wrong
                - Hint: in case of lost Recovery Token, issue start again
                ```json
                {
                  "result": false,
                  "errors": [
                    {
                      "name": "token",
                      "input": "body",
                      "message": "recovery_token is wrong"
                    }
                  ]
                }
                ```
        '500':
          description: |
            Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  format: phone_number
                  description: User phone
                recovery_token:
                  type: string
                  description: Recovery Token received in "verify" request
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
              required:
                - phone
                - recovery_token
                - password
                - password_confirmation
        description: User password recovery finish request
        required: true
  /auth/signin:
    post:
      summary: >-
        Authorize user and get auth token, works only for full-verified user
        accounts
      responses:
        '200':
          description: Authorized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenResponse'
        default:
          description: In case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSigninRequest'
        description: Create user request
        required: true
  /auth/signout:
    delete:
      security:
        - Bearer: []
      summary: Invalidates user's current authorization session
      responses:
        '200':
          description: 'Ok, token session invalidated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        default:
          description: In case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /auth/refresh_token:
    get:
      security:
        - Bearer: []
      summary: Refresh user token
      responses:
        '200':
          description: 'Ok, token has been successfuly refreshed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenResponse'
        default:
          description: In case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /auth/check:
    get:
      security:
        - Bearer: []
      summary: 'Checks if user authorized, returns his phone on success'
      responses:
        '200':
          description: 'Ok, user authorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhoneResponse'
        default:
          description: In case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /user/me:
    get:
      security:
        - Bearer: []
      summary: Get specified user info
      parameters:
        - name: convert
          in: query
          required: false
          example: usd
          description: >-
            currency for additional balance representation, expected in 3
            letters form like USD, RUB, EUR etc, if value is wrong, will be
            ignored
          schema:
            type: string
            format: currency
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        default:
          description: In case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /user/me/personal:
    post:
      security:
        - Bearer: []
      summary: Send personal data (create KYC request). Requires sender to be olde then 18 ages
      responses:
        '200':
          description: KYC request created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        default:
          description: In case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserKYCData'
        description: Create KYC form
        required: true
    get:
      security:
        - Bearer: []
      summary: Get user KYC request info
      responses:
        '200':
          description: User KYC request info (`personal_data` will be empty if no pesonal data has been sent)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKYCResponse'
        default:
          description: In case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /user/me/refferals:
    get:
      security:
        - Bearer: []
      summary: Get list of user refferals
      responses:
        '200':
          description: List of refferals
          content:
            application/json:
              schema:
                properties:
                  refferals:
                    type: array
                    items:
                      type: string
                      format: uuid
                      description: Refferal user ID
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Timestamp:
      type: integer
      description: unix timestamp (seconds since 1 january 1970) in UTC timezone
      example: 1534504706
    UserSingupRequest:
      properties:
        phone:
          type: string
          description: Valid phone number of the user
        password:
          type: string
          format: password
        password_confirmation:
          type: string
          format: password
        refferer_phone:
          type: string
          description: Valid phone of person which sent invite which leads to this call
      required:
        - phone
        - password
        - password_confirmation
    BaseResponse:
      properties:
        result:
          type: boolean
    UserTokenResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                token:
                  type: string
                  description: User authorization token
                  example: asdfjbkasfkjasdfl
      required:
        - token
        - data
    UserPhoneResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                phone:
                  type: string
                  description: User phone number
      required:
        - phone
    UserSigninRequest:
      properties:
        phone:
          type: string
          description: Valid phone number of already created user
        password:
          type: string
          format: password
          description: User passowrd
      required:
        - phone
        - password
    User:
      properties:
        id:
          type: string
          description: Unique user identifier
          example: 8b92eaaf62064a2a9df4b2a2d170d53e
        phone:
          type: string
          format: phone
          example: '+79991112233'
          description: User phone in international form
        status:
          type: string
          description: 'User status, shows only `active` right now'
          example: active
        registered_at:
          $ref: '#/components/schemas/Timestamp'
          description: Date when user account has been activated

    UserResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                user:
                  allOf:
                    - $ref: '#/components/schemas/User'
                    - type: object
                      description: user wallets statistic
                      properties:
                        wallets:
                          type: object
                          properties:
                            count:
                              type: number
                              description: count of user wallets
                              example: 1
                            total_balance:
                              type: object
                              description: >-
                                total wallet balance in fiat and crypto
                                currencies
                              example:
                                btc: 1
                                usd: 5400
                              additionalProperties:
                                type: number
                                properties:
                                  code:
                                    type: string
                                    description: Fiat currency or cypto-coin name
                                    example: btc
                                  text:
                                    type: number
                                    description: >-
                                      Value of balance in specified currency or
                                      crypto-coin units
                                    example: 100.12
   
    UserKYCData:
      properties:
        first_name:
          type: string
          description: User name
        last_name:
          type: string
          description: User surname
        email:
          type: string
          format: email
        sex:
          type: string
          enum: [male, female, undefined]
        birth_date:
          type: integer
          format: utc_timestampt
          description: Date of the user birthdate=
        country:
          type: string
          description: Main user citizenship
          example: Ethiopia
        address:
          type: object
          description: User living address
          properties:
            city:
              type: string
            region:
              type: string
            street:
              type: street
            house:
              type: string
            postal_code:
              type: integer

    UserCreateKYCRequest:
      first_name:
        type: string
        format: alpha
        description: User name
      last_name:
        type: string
        format: alpha
        description: User surname
      email:
        type: string
        format: email
      sex:
        type: string
        enum: [male, female, undefined]
      birth_date:
        type: integer
        format: utc_timestampt
        description: Date of the user birthdate
      country:
        type: string
        description: Main user citizenship
        example: Ethiopia
      city:
        format: alpha
        type: string
      region:
        format: alpha
        type: string
      street:
        format: alpha
        type: street
      house:
        format: alpha
        type: string
      postal_code:
        format: alpha
        type: integer

    UserKYCResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/UserKYCStatus'
            personal_data:
              $ref: '#/components/schemas/UserKYCData'
    
    UserKYCStatus:
      type: string
      enum:
        - unloaded
        - pending
        - verified
        - declined

    CoinType:
      type: string
      description: Specifies coin type
      enum:
        - eth
        - btc
        - btcc
        - zam
    UserCreateWalletRequest:
      properties:
        coin:
          $ref: '#/components/schemas/CoinType'
        wallet_name:
          type: string
          description: Optional name for user wallet
      required:
        - coin
    UserWalletData:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique wallet id
        coin:
          $ref: '#/components/schemas/CoinType'
        wallet_name:
          type: string
          description: Optional name for user wallet
        address:
          type: string
          description: Real address inside coin blockchain
        balance:
          type: number
          description: Wallet balance
      required:
        - id
        - coin
        - wallet_name
        - address
        - balance
    UserWalletResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            wallet:
              $ref: '#/components/schemas/UserWalletData'
    UserAllWalletsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            сount:
              type: integer
              description: Count of returned transactions
            next:
              type: string
              description: Reference to the next page
            wallets:
              items:
                $ref: '#/components/schemas/UserWalletData'
    WalletTransactionStatus:
      description: Describes transaction status
      type: string
      enum:
        - pending
        - awaiting_recipient
        - awaiting_confirmations
        - done
        - cancelled
        - failed
    WalletTransactionData:
      properties:
        id:
          type: string
          description: Unique identifier of the transaction
        direction:
          type: string
          enum:
            - incoming
            - outgoing
        status:
          $ref: '#/components/schemas/WalletTransactionStatus'
        coin:
          $ref: '#/components/schemas/CoinType'
        recipient:
          type: string
          description: >
            'Recipinet of this transaction, on of "me", "coin_address",
            "user_id"'
        amount:
          type: number
          description: Amount of transferred coins
      required:
        - id
        - direction
        - recipient
        - amount
    WalletSendTransactionRequest:
      properties:
        wallet_id:
          type: string
          description: Wallet for featured transaction
        recipient:
          type: string
          description: >
            'Recipinet of this transaction, on of "me", "coin_address",
            "user_id"'
        amount:
          type: number
          description: Amount of transferred coins
    WalletSendTransactionResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            transaction:
              $ref: '#/components/schemas/WalletTransactionData'
    WalletTransactionResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            transaction:
              $ref: '#/components/schemas/WalletTransactionData'
    WalletAllTransactionsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            сount:
              type: integer
              description: Count of returned transactions
            next:
              type: string
              description: Reference to the next page
            transactions:
              items:
                $ref: '#/components/schemas/WalletTransactionData'
    Errors:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            errors:
              type: array
              items:
                type: object
                anyOf:
                  - $ref: '#/components/schemas/FieldError'
                  - $ref: '#/components/schemas/Error'
    Error:
      description: Error format which returned by handlers (usually internal errors)
      type: object
      properties:
        message:
          type: string
          description: Describes error
    FieldError:
      type: object
      description: >
        This field is presented in case when error is cause of missed, misstyped
        or wrong formatted request 

        parameter passed throught POST JSON body, query or path
      properties:
        message:
          type: string
          description: Describes what wrong with this field
        name:
          type: string
          description: Name of parameter which occurs error
        input:
          type: string
          description: Describes the way in which this parameter has come
      required:
        - message
        - name
        - input
